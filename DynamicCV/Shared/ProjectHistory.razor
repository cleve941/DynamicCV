@using Models
@if (entries != null)
{
    <div class="container">
        <div class="row" style="margin-bottom: 12px;">

            @foreach (var entry in entries)
            {
                <div class="col-md-6" style="padding-top:12px;">
                    <MudCard Class="mud-theme-primary">
                        <MudCardHeader>

                            <CardHeaderContent>
                                <MudText>@entry.StartingDate - @entry.EndingDate</MudText>
                                <MudText>@entry.Subject</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText Typo="Typo.body2">Kunde:</MudText>
                            <MudText Typo="Typo.body2">@entry.Customer</MudText>
                            
                            <MudText Typo="Typo.body2">@entry.DescriptionTitle</MudText>
                            <MudText Typo="Typo.body2">Rolle:</MudText>
                            <MudText Typo="Typo.body2">@entry.Role</MudText>
                            <MudText Typo="Typo.body2">Benutzte Technologien:</MudText>
                            @foreach (var tech in entry.UsedTechnologies)
                            {
                                <MudText Typo="Typo.body2">@tech</MudText>
                            }
                             @foreach (var description in entry.DescriptionPoints)
                            {
                                <MudText Typo="Typo.body2">@description</MudText>
                            }
                        </MudCardContent>
                    </MudCard>
                </div>
            }
        </div>
    </div>
}


@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public List<ProjectHistoryEntry>? entries { get; set; }
}
